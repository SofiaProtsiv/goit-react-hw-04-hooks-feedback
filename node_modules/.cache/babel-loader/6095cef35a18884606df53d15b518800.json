{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/feedback.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './feedback.module.css';\nimport Statistics from './statistics';\nimport Controls from './controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FeedbackApp extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      percentage: 0\n    };\n\n    this.countGoodFeedback = () => {\n      this.setState(prevState => ({\n        good: Number(prevState.good + 1),\n        total: this.state.good + this.state.neutral + this.state.bad + 1\n      }));\n    };\n\n    this.countNeutralFeedback = () => {\n      this.setState(prevState => ({\n        neutral: Number(prevState.neutral + 1),\n        total: this.state.good + this.state.neutral + this.state.bad + 1\n      }));\n    };\n\n    this.countBadFeedback = () => {\n      this.setState(prevState => ({\n        bad: Number(prevState.bad + 1),\n        total: this.state.good + this.state.neutral + this.state.bad + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      this.setState({\n        total: this.state.good + this.state.neutral + this.state.bad\n      });\n    };\n\n    this.countPositiveFeedbackPercentage = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.feedback,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {\n        onGoodFeedback: this.countGoodFeedback,\n        onNeutralFeedback: this.countNeutralFeedback,\n        onBadFeedback: this.countBadFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/feedback.js"],"names":["PropTypes","React","style","Statistics","Controls","FeedbackApp","Component","state","good","neutral","bad","total","percentage","countGoodFeedback","setState","prevState","Number","countNeutralFeedback","countBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","render","feedback"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE,CAHC;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,UAAU,EAAE;AALN,KAD8C;;AAAA,SAQtDC,iBARsD,GAQlC,MAAM;AACxB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BP,QAAAA,IAAI,EAAEQ,MAAM,CAACD,SAAS,CAACP,IAAV,GAAiB,CAAlB,CADc;AAE1BG,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAlD,GAAwD;AAFrC,OAAL,CAAvB;AAID,KAbqD;;AAAA,SActDO,oBAdsD,GAc/B,MAAM;AAC3B,WAAKH,QAAL,CAAcC,SAAS,KAAK;AAC1BN,QAAAA,OAAO,EAAEO,MAAM,CAACD,SAAS,CAACN,OAAV,GAAoB,CAArB,CADW;AAE1BE,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAlD,GAAwD;AAFrC,OAAL,CAAvB;AAID,KAnBqD;;AAAA,SAoBtDQ,gBApBsD,GAoBnC,MAAM;AACvB,WAAKJ,QAAL,CAAcC,SAAS,KAAK;AAC1BL,QAAAA,GAAG,EAAEM,MAAM,CAACD,SAAS,CAACL,GAAV,GAAgB,CAAjB,CADe;AAE1BC,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAlD,GAAwD;AAFrC,OAAL,CAAvB;AAID,KAzBqD;;AAAA,SA0BtDS,kBA1BsD,GA0BjC,MAAM;AACzB,WAAKL,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG;AAD/C,OAAd;AAID,KA/BqD;;AAAA,SAgCtDU,+BAhCsD,GAgCpB,MAAM,CAEvC,CAlCqD;AAAA;;AAoCtDC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAEnB,KAAK,CAACoB,QAAtB;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,cAAc,EAAE,KAAKT,iBADvB;AAEE,QAAA,iBAAiB,EAAE,KAAKI,oBAF1B;AAGE,QAAA,aAAa,EAAE,KAAKC;AAHtB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAjDqD","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport style from './feedback.module.css';\nimport Statistics from './statistics'\nimport Controls from './controls'\n\nexport default class FeedbackApp extends React.Component{\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    percentage: 0\n  }\n  countGoodFeedback = () => {\n    this.setState(prevState => ({\n      good: Number(prevState.good + 1),\n      total: this.state.good + this.state.neutral + this.state.bad + 1,\n    }));\n  }\n  countNeutralFeedback = () => {\n    this.setState(prevState => ({\n      neutral: Number(prevState.neutral + 1),\n      total: this.state.good + this.state.neutral + this.state.bad + 1,\n    }));\n  }\n  countBadFeedback = () => {\n    this.setState(prevState => ({\n      bad: Number(prevState.bad + 1),\n      total: this.state.good + this.state.neutral + this.state.bad + 1,\n    }));\n  }\n  countTotalFeedback = () => {\n    this.setState({\n        total: this.state.good + this.state.neutral + this.state.bad,\n      })\n      \n  }\n  countPositiveFeedbackPercentage = () => {\n\n  }\n\n  render () {\n    return (\n      <div className={style.feedback}>\n        <Controls \n          onGoodFeedback={this.countGoodFeedback}\n          onNeutralFeedback={this.countNeutralFeedback}\n          onBadFeedback={this.countBadFeedback}\n          />\n        <Statistics\n        \n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}