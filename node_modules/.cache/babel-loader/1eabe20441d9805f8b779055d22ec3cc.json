{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./Controls\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\nimport style from \"./feedback.module.css\";\nexport default function FeedbackApp() {\n  _s();\n\n  const [good, setStateGood] = useState(\"\");\n} // export default class FeedbackApp extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     const total = good + neutral + bad;\n//     return total;\n//   };\n//   countPositiveFeedbackPercentage = () => {\n//     const total = this.countTotalFeedback();\n//     const { good } = this.state;\n//     const percentage = (good * 100) / total;\n//     return Math.round(percentage);\n//   };\n//   onLeaveFeedback = (event) => {\n//     const name = event.target.name;\n//     this.setState((prevState) => ({\n//       [name]: prevState[name] + 1,\n//     }));\n//   };\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\n//     const objKey = Object.keys(this.state);\n//     return (\n//       <div className={style.feedback}>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={objKey}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n//         {total === 0 ? (\n//           <Notification message=\"No feedback given\" />\n//         ) : (\n//           <Section title=\"Statistics\">\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               positivePercentage={positivePercentage}\n//             />\n//           </Section>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n_s(FeedbackApp, \"KEjlpVqS3NNZRXxpxpD9ATYoVio=\");\n\n_c = FeedbackApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackApp\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/feedback.js"],"names":["useState","useEffect","Statistics","FeedbackOptions","Section","Notification","style","FeedbackApp","good","setStateGood"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7DwBO,W;;KAAAA,W","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./Controls\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\nimport style from \"./feedback.module.css\";\n\nexport default function FeedbackApp() {\n  const [good, setStateGood] = useState(\"\");\n}\n// export default class FeedbackApp extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     const total = good + neutral + bad;\n//     return total;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const total = this.countTotalFeedback();\n//     const { good } = this.state;\n//     const percentage = (good * 100) / total;\n//     return Math.round(percentage);\n//   };\n\n//   onLeaveFeedback = (event) => {\n//     const name = event.target.name;\n//     this.setState((prevState) => ({\n//       [name]: prevState[name] + 1,\n//     }));\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\n\n//     const objKey = Object.keys(this.state);\n//     return (\n//       <div className={style.feedback}>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={objKey}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n\n//         {total === 0 ? (\n//           <Notification message=\"No feedback given\" />\n//         ) : (\n//           <Section title=\"Statistics\">\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               positivePercentage={positivePercentage}\n//             />\n//           </Section>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}