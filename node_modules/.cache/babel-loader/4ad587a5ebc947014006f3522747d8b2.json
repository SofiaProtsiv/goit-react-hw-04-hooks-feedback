{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/feedback.js\";\nimport React from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './Controls';\nimport Section from './Statistics';\nimport Notification from './Notification';\nimport style from './feedback.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FeedbackApp extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const total = good + neutral + bad;\n      return total;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      const total = this.countTotalFeedback();\n      const {\n        good\n      } = this.state;\n      const percentage = good * 100 / total;\n      return Math.round(percentage);\n    };\n\n    this.onLeaveFeedback = event => {\n      const name = event.target.name;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.feedback,\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: objKey,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/feedback.js"],"names":["React","Statistics","FeedbackOptions","Section","Notification","style","FeedbackApp","Component","state","good","neutral","bad","countTotalFeedback","total","countPositiveFeedbackPercentage","percentage","Math","round","onLeaveFeedback","event","name","target","setState","prevState","render","positivePercentage","objKey","Object","keys","feedback"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD8C;;AAAA,SAOtDC,kBAPsD,GAOjC,MAAM;AAC3B,YAAM;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMK,KAAK,GAAGJ,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,aAAOE,KAAP;AACA,KAXsD;;AAAA,SAavDC,+BAbuD,GAarB,MAAM;AACvC,YAAMD,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,YAAMO,UAAU,GAAIN,IAAI,GAAG,GAAR,GAAeI,KAAlC;AACA,aAAOG,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAP;AACA,KAlBsD;;AAAA,SAoBvDG,eApBuD,GAoBpCC,KAAD,IAAW;AAC5B,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,WAAKE,QAAL,CAAeC,SAAD,KAAgB;AAC7B,SAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AADG,OAAhB,CAAd;AAGA,KAzBsD;AAAA;;AA4BvDI,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMK,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,UAAMa,kBAAkB,GAAG,KAAKX,+BAAL,EAA3B;AAEA,UAAMY,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAjB,CAAf;AACA,wBACC;AAAK,MAAA,SAAS,EAAEH,KAAK,CAACwB,QAAtB;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACC,QAAC,eAAD;AAAiB,UAAA,OAAO,EAAEH,MAA1B;AAAkC,UAAA,eAAe,EAAE,KAAKR;AAAxD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,EAKEL,KAAK,KAAK,CAAV,gBACA,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,IAAI,EAAEJ,IADP;AAEC,UAAA,OAAO,EAAEC,OAFV;AAGC,UAAA,GAAG,EAAEC,GAHN;AAIC,UAAA,KAAK,EAAEE,KAJR;AAKC,UAAA,kBAAkB,EAAEY;AALrB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AAvDsD","sourcesContent":["import React from 'react';\nimport Statistics from './Statistics'\nimport FeedbackOptions from './Controls'\nimport Section from './Statistics'\nimport Notification from './Notification';\nimport style from './feedback.module.css';\n\nexport default class FeedbackApp extends React.Component{\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  countTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst total = good + neutral + bad;\n\t\treturn total;\n\t};\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tconst total = this.countTotalFeedback();\n\t\tconst { good } = this.state;\n\t\tconst percentage = (good * 100) / total;\n\t\treturn Math.round(percentage);\n\t};\n\n\tonLeaveFeedback = (event) => {\n\t\tconst name = event.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n\t};\n  \n\n\trender() {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\n\t\tconst objKey = Object.keys(this.state);\n\t\treturn (\n\t\t\t<div className={style.feedback}>\n\t\t\t\t<Section title=\"Please leave feedback\">\n\t\t\t\t\t<FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\n\t\t\t\t</Section>\n\n\t\t\t\t{total === 0 ? (\n\t\t\t\t\t<Notification message=\"No feedback given\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Section title=\"Statistics\">\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}