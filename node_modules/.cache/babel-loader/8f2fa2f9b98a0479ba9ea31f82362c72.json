{"ast":null,"code":"var _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/Controls/controls.js\";\nimport React from \"react\";\nimport style from \"../feedback.module.css\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedbackOptions = _ref => {\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.buttonList,\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.button,\n      type: \"button\",\n      onClick: () => onLeaveFeedback(option),\n      children: option\n    }, shortid.generate(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\nexport default FeedbackOptions; ///working version without hooks//////\n// const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n// \treturn (\n// \t\t<div className={style.buttonList}>\n// \t\t    {options.map((option) => (\n// \t\t\t\t<button key={shortid.generate()} className = {style.button} type=\"button\" name={option} onClick={onLeaveFeedback}>\n// \t\t\t\t\t{option}\n// \t\t\t\t</button>\n// \t\t\t))}\n// \t\t</div>\n// \t);\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-02-feedback/src/components/feedback/Controls/controls.js"],"names":["React","style","shortid","PropTypes","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","button","generate","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,eAAe,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAiC;AACxD,sBACE;AAAK,IAAA,SAAS,EAAEL,KAAK,CAACM,UAAtB;AAAA,cACGF,OAAO,CAACG,GAAR,CAAaC,MAAD,iBACX;AAEE,MAAA,SAAS,EAAER,KAAK,CAACS,MAFnB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAE,MAAMJ,eAAe,CAACG,MAAD,CAJhC;AAAA,gBAMGA;AANH,OACOP,OAAO,CAACS,QAAR,EADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMP,e;AAgBNA,eAAe,CAACQ,SAAhB,GAA4B;AAC1BP,EAAAA,OAAO,EAAEF,SAAS,CAACU,KAAV,CAAgBC,UADC;AAE1BR,EAAAA,eAAe,EAAEH,SAAS,CAACY,IAAV,CAAeD;AAFN,CAA5B;AAKA,eAAeV,eAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport style from \"../feedback.module.css\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.buttonList}>\n      {options.map((option) => (\n        <button\n          key={shortid.generate()}\n          className={style.button}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n\n///working version without hooks//////\n\n// const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n// \treturn (\n// \t\t<div className={style.buttonList}>\n// \t\t    {options.map((option) => (\n// \t\t\t\t<button key={shortid.generate()} className = {style.button} type=\"button\" name={option} onClick={onLeaveFeedback}>\n// \t\t\t\t\t{option}\n// \t\t\t\t</button>\n// \t\t\t))}\n// \t\t</div>\n// \t);\n// };\n"]},"metadata":{},"sourceType":"module"}