{"ast":null,"code":"import _slicedToArray from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-04-hooks-feedback-/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import Statistics from\"./Statistics\";import FeedbackOptions from\"./Controls\";import Section from\"./Section\";import Notification from\"./Notification\";import style from\"./feedback.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FeedbackApp(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),good=_useState2[0],setGood=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),neutral=_useState4[0],setNeutral=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),bad=_useState6[0],setBad=_useState6[1];var onLeaveFeedback=function onLeaveFeedback(option){switch(option){case\"good\":setGood(function(prevGood){return prevGood+1;});break;case\"neutral\":setNeutral(function(prevNeutral){return prevNeutral+1;});break;case\"bad\":setBad(function(prevBad){return prevBad+1;});break;default:return;}};var countTotalFeedback=function countTotalFeedback(){return good+neutral+bad;};var countPositiveFeedbackPercentage=function countPositiveFeedbackPercentage(){return Math.round(good/countTotalFeedback()*100)||0;};return/*#__PURE__*/_jsxs(\"div\",{className:style.feedback,children:[/*#__PURE__*/_jsx(Section,{title:\"Please leave feedback\",children:/*#__PURE__*/_jsx(FeedbackOptions,{options:[\"good\",\"neutral\",\"bad\"],onLeaveFeedback:onLeaveFeedback})}),countTotalFeedback()?/*#__PURE__*/_jsx(Section,{title:\"Statistics\",children:/*#__PURE__*/_jsx(Statistics,{good:good,neutral:neutral,bad:bad,total:countTotalFeedback(),positivePercentage:countPositiveFeedbackPercentage()})}):/*#__PURE__*/_jsx(Notification,{message:\"No feedback given\"})]});}","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-04-hooks-feedback-/src/components/feedback/feedback.js"],"names":["useState","Statistics","FeedbackOptions","Section","Notification","style","FeedbackApp","good","setGood","neutral","setNeutral","bad","setBad","onLeaveFeedback","option","prevGood","prevNeutral","prevBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","feedback"],"mappings":"mKAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,YAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,cAAwBN,QAAQ,CAAC,CAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAA8BR,QAAQ,CAAC,CAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAsBV,QAAQ,CAAC,CAAD,CAA9B,yCAAOW,GAAP,eAAYC,MAAZ,eAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAY,CAClC,OAAQA,MAAR,EACE,IAAK,MAAL,CACEN,OAAO,CAAC,SAACO,QAAD,QAAcA,CAAAA,QAAQ,CAAG,CAAzB,EAAD,CAAP,CACA,MACF,IAAK,SAAL,CACEL,UAAU,CAAC,SAACM,WAAD,QAAiBA,CAAAA,WAAW,CAAG,CAA/B,EAAD,CAAV,CACA,MACF,IAAK,KAAL,CACEJ,MAAM,CAAC,SAACK,OAAD,QAAaA,CAAAA,OAAO,CAAG,CAAvB,EAAD,CAAN,CACA,MACF,QACE,OAXJ,CAaD,CAdD,CAeA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,MAAOX,CAAAA,IAAI,CAAGE,OAAP,CAAiBE,GAAxB,CACD,CAFD,CAGA,GAAMQ,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,EAAM,CAC5C,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAYd,IAAI,CAAGW,kBAAkB,EAA1B,CAAgC,GAA3C,GAAmD,CAA1D,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAEb,KAAK,CAACiB,QAAtB,wBACE,KAAC,OAAD,EAAS,KAAK,CAAC,uBAAf,uBACE,KAAC,eAAD,EACE,OAAO,CAAE,CAAC,MAAD,CAAS,SAAT,CAAoB,KAApB,CADX,CAEE,eAAe,CAAET,eAFnB,EADF,EADF,CAQGK,kBAAkB,gBACjB,KAAC,OAAD,EAAS,KAAK,CAAC,YAAf,uBACE,KAAC,UAAD,EACE,IAAI,CAAEX,IADR,CAEE,OAAO,CAAEE,OAFX,CAGE,GAAG,CAAEE,GAHP,CAIE,KAAK,CAAEO,kBAAkB,EAJ3B,CAKE,kBAAkB,CAAEC,+BAA+B,EALrD,EADF,EADiB,cAWjB,KAAC,YAAD,EAAc,OAAO,CAAC,mBAAtB,EAnBJ,GADF,CAwBD","sourcesContent":["import { useState } from \"react\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./Controls\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\nimport style from \"./feedback.module.css\";\n\nexport default function FeedbackApp() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prevGood) => prevGood + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevNeutral) => prevNeutral + 1);\n        break;\n      case \"bad\":\n        setBad((prevBad) => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100) || 0;\n  };\n\n  return (\n    <div className={style.feedback}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      {countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}